Building 5 to 10 small projects covering core React concepts should be enough to understand any React-based code. Focus on projects that involve:

Component-based architecture – Build a simple counter or to-do app.  ->done

State management (useState, useReducer) – Create a quiz or calculator.  ->done

Props & Context API – Build a theme switcher. ->

Event handling & forms – Develop a login or feedback form.

React Router – Make a multi-page blog or portfolio site.

API integration (fetch, Axios) – Develop a weather or GitHub profile viewer.

Custom hooks – Implement a custom dark mode or local storage hook.

Performance optimization (useMemo, useCallback) – Optimize an e-commerce cart.

State management libraries (Redux, Zustand, Recoil) – Build a task manager.

Real-time features (WebSockets, Firebase, Socket.IO) – Create a chat app.

After these, you should be comfortable reading and working with most React-based projects.


------------------->
map->
const numbers = [1, 2, 3, 4];
const doubled = numbers.map(num => num * 2);
console.log(doubled);  // Output: [2, 4, 6, 8]
filter->
const numbers = [1, 2, 3, 4, 5];
const evens = numbers.filter(num => num % 2 === 0);
console.log(evens);  // Output: [2, 4]
reduce->
const numbers = [1, 2, 3, 4];
const sum = numbers.reduce((acc, num) => acc + num, 0);
console.log(sum);  // Output: 10
spread--->

const numbers = [2, 3, 4];
const newNumbers = [1, ...numbers, 5];
console.log(newNumbers); // [1, 2, 3, 4, 5]

